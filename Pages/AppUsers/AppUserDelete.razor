@page "/appuserdelete/{id:int}"
@layout UserLayout

@using ITTicketSystem.Data.AppUsers

@inject IAppUserService AppUserService
@inject NavigationManager NavigationManager

<div class="modal fade show" id="myModal" style="display: block; background-color: #2F363E;" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@pageTitle</h4>
                <button type="button" class="close" @onclick="@Cancel">&times;</button>
            </div>
            <div class="modal-body">
                <EditForm Model="@appUsers" OnValidSubmit="@AppUserSave">
                    <table>
                        <tr>
                            <td>Are you sure you want to delete this user?</td>                            
                        </tr>
                        <tr>                            
                            <td><input type="text" class="input-label" @bind="appUsers.FirstName"/></td>
                            <td><input type="text" class="input-label" @bind="appUsers.LastName"/></td>
                        </tr>                        
                        <tr>
                            <td colspan="2" style="text-align: center">
                                <input type="submit" class="btn btn-primary" value="@buttonText" />                                                                
                                <input type="button" class="btn btn-primary" value="No" @onclick="@Cancel" />
                            </td>
                        </tr>
                    </table>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    AppUser appUsers = new AppUser();

    [Parameter]
    public int id { get; set; }

    public string pageTitle = "Delete User";
    public string buttonText = "Yes";

    protected override async Task OnInitializedAsync()
    {
        DateTime defaultdate = DateTime.Today;        
        appUsers = await AppUserService.AppUser_GetOne(id);
        appUsers.UpdatedDate = defaultdate;  
        appUsers.Status = "Inactive";
    }  

    protected async Task AppUserSave()
    {
        if (id == 0)
        {
            await AppUserService.AppUserInsert(appUsers);
        }
        else
        {
            await AppUserService.AppUserUpdate(appUsers);
        }
        NavigationManager.NavigateTo("/appuserlist");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/appuserlist");
    }
}